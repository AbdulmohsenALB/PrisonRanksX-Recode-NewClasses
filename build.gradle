import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'eclipse'
}

group 'me.prisonranksx'
version '3.0'

repositories {
    mavenCentral()
    mavenLocal()
    maven { url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
    maven { url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/' }
    maven { url = 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url = 'https://oss.sonatype.org/content/repositories/central' }
    maven { url = 'https://jitpack.io' }
    maven { url = 'https://repo.codemc.io/repository/maven-public/' }
    maven { url = 'https://repo.papermc.io/repository/maven-public/' }
    maven {
        url = 'https://repo.extendedclip.com/releases/'
    }
    maven {
        name "essentialsx-releases"
        url "https://repo.essentialsx.net/releases/"
    }
    maven {
        name "papermc"
        url "https://papermc.io/repo/repository/maven-public/"
    }
    flatDir {
        dirs 'libs'
        dirs 'resources'
    }
}

shadowJar {
    destinationDirectory.set(file('D:/Backup/Moved From C Disk/MyFiles/Programs/Minecraft Server 1.8.8/plugins'))
}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes "Main-Class": "me.prisonranksx.PrisonRanksX"
    }
    tasks.withType(JavaCompile).configureEach {
        options.encoding = "UTF-8"
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

sourceSets {

    main {
        java {
            srcDirs = ['src']
        }
        resources {
            srcDirs = ['resources']
        }
    }

    /*
   test {
        java {
            srcDirs = ['test/java']
       }
   }
   */
}

// For testing, not used
tasks.named('test', Test) {
    useJUnitPlatform()

    maxHeapSize = '1G'

    testLogging {
        events "passed"
    }
}

dependencies {
    implementation 'org.jetbrains:annotations:24.0.0'

    implementation 'me.hsgamer:uni-hologram-spigot-bundle:2.5.0'
    implementation 'me.hsgamer:uni-hologram-spigot-holographicdisplays:2.5.0'
    implementation 'me.hsgamer:uni-hologram-spigot-decentholograms:2.5.0'
    implementation 'me.hsgamer:uni-hologram-spigot-cmi:2.5.0'
    implementation 'me.hsgamer:uni-hologram-spigot-fancyholograms:2.5.0'
    implementation 'me.hsgamer:uni-hologram-spigot-vanilla:2.5.0'

    compileOnly "com.github.MilkBowl:VaultAPI:1.7"
    compileOnly fileTree(dir: 'libs', include: ['*.jar'])
    compileOnly 'me.clip:placeholderapi:2.11.6'
    compileOnly 'com.github.decentsoftware-eu:decentholograms:2.8.3'
    compileOnly 'net.luckperms:api:5.4'
    compileOnly 'com.github.ElgarL:groupmanager:3.2'
    compileOnly 'me.filoghost.holographicdisplays:holographicdisplays-api:3.0.0'
    compileOnly 'org.spigotmc:spigot-api:1.16.5-R0.1-SNAPSHOT'
    compileOnly 'net.essentialsx:EssentialsX:2.20.1'

}

processResources {
    duplicatesStrategy = 'exclude'
    from(sourceSets.main.resources.srcDirs) {
        filter ReplaceTokens, tokens: [version: version]
    }
}


